const API_URL = "http://localhost:8080/todo/";

// ดึง token จาก localStorage
const token = localStorage.getItem("token");

// ตรวจสอบว่ามี token หรือไม่
if (!token) {
  alert("Token not found. Please login first.");
  // อาจเปลี่ยนเส้นทางไปที่หน้า login หรือแสดงข้อความเพิ่มเติม
}

async function fetchTodos() {
  const response = await fetch(API_URL, {
    method: 'GET',
    headers: {
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
  });

  if (!response.ok) {
    alert("Failed to fetch todos. Please check your token or server.");
    return;
  }

  const todos = await response.json();
  const todoList = document.getElementById("todos");
  todoList.innerHTML = "";

  todos.forEach(todo => {
    const todoItem = document.createElement("div");
    todoItem.className = "todo";
    todoItem.draggable = true; // ทำให้ todoItem สามารถลากได้
    todoItem.setAttribute("data-id", todo.id); // เก็บ id ของ todo ไว้ใน attribute

    todoItem.innerHTML = `
      <label>
        <input type="checkbox" ${todo.complete ? "checked" : ""} onchange="toggleComplete(${todo.id}, this.checked)">
        ${todo.text}
      </label>
      <button onclick="editTodo(${todo.id})">Edit</button>
      <button onclick="deleteTodo(${todo.id})">Delete</button>
    `;

    todoItem.addEventListener("dragstart", handleDragStart);
    todoItem.addEventListener("dragover", handleDragOver);
    todoItem.addEventListener("drop", handleDrop);
    todoList.appendChild(todoItem);
  });
}

async function addTodo() {
  const text = document.getElementById("newTodoText").value;
  if (!text) return alert("Please enter a todo text");

  const response = await fetch(API_URL, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
    body: JSON.stringify({ text, complete: false }),
  });

  if (!response.ok) {
    alert("Failed to add todo. Please check your token or server.");
    return;
  }

  document.getElementById("newTodoText").value = "";
  fetchTodos();
}

async function toggleComplete(id, complete) {
  const response = await fetch(API_URL + id, {
    headers: {
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
  });

  if (!response.ok) {
    alert("Failed to fetch todo details. Please check your token or server.");
    return;
  }

  const todo = await response.json();
  await fetch(API_URL + id, {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
    body: JSON.stringify({
      text: todo.text,
      complete,
    }),
  });

  fetchTodos();
}

async function deleteTodo(id) {
  const response = await fetch(API_URL + id, {
    method: "DELETE",
    headers: {
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
  });

  if (!response.ok) {
    alert("Failed to delete todo. Please check your token or server.");
    return;
  }

  fetchTodos();
}

async function editTodo(id) {
  const response = await fetch(API_URL + id, {
    headers: {
      "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
    },
  });

  if (!response.ok) {
    alert("Failed to fetch todo details. Please check your token or server.");
    return;
  }

  const todo = await response.json();
  const newText = prompt("Edit Todo :", todo.text);
  if (newText !== null && newText.trim() !== "") {
    await fetch(API_URL + id, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`, // ส่ง token ไปใน header
      },
      body: JSON.stringify({
        text: newText.trim(),
        complete: todo.complete,
      }),
    });

    fetchTodos();
  }
}

// ฟังก์ชันสำหรับการลากและวางยังคงเหมือนเดิม

fetchTodos();
